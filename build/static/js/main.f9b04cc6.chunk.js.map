{"version":3,"sources":["themes/themes.js","themes/global.js","utils/Yelp.js","components/Business/Business.js","components/BusinessList/BusinessList.js","components/PlacesAutoComplete/PlacesAutoComplete.js","components/SearchBar/SearchBar.js","components/Toggle/Toggle.js","components/App/App.js","utils/useDarkMode.js","index.js"],"names":["lightTheme","title","background","color","text","darkTheme","bodyBackground","GlobalStyles","createGlobalStyle","theme","apiKey","process","REACT_APP_YELP_KEY","Yelp","search","term","location","sortBy","price","fetch","headers","Authorization","then","response","json","data","businesses","map","business","id","imageSrc","image_url","url","phone","name","address","address1","city","state","zipCode","zip_code","distance","category","categories","rating","reviewCount","review_count","autocomplete","latitude","longitude","console","table","count","terms","Business","gMaps","encodeURI","this","props","className","href","target","rel","src","alt","toFixed","join","React","Component","BusinessList","key","LocationSearchInput","handleChange","setState","handleLocationChange","handleSelect","value","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","suggestion","active","style","backgroundColor","cursor","description","SearchBar","prices","autocompleteList","handleTermChange","bind","handleSearch","handlePriceChange","autocompleteYelp","generateAutocompleteList","priceOptions","$","$$","$$$","$$$$","sortByOptions","validator","SimpleReactValidator","autoForceUpdate","navigator","geolocation","getCurrentPosition","pos","coords","sortByOption","e","length","event","checked","removedValues","filter","preventDefault","allValid","searchYelp","showMessages","Object","keys","sortByOptionValue","onClick","handleSortByChange","getSortByClass","priceOption","priceOpionValue","type","htmlFor","onSubmit","renderSortByOptions","renderPriceOptions","getItemValue","item","items","menuStyle","borderRadius","boxShadow","padding","fontSize","overflow","maxHeight","width","minWidth","renderItem","isHighlighted","marginTop","inputProps","message","Toggle","toggleTheme","checkedIcon","uncheckedIcon","height","handleDiameter","offColor","onColor","App","useState","setBusinesses","setTheme","setMode","mode","window","localStorage","setItem","useEffect","localTheme","getItem","matchMedia","matches","useDarkMode","themeMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9b04cc6.chunk.js","sourcesContent":["export const lightTheme = {\r\n  title: \"light\",\r\n  background: \"#cca353\",\r\n  color: \"#fff\",\r\n  text: \"#000\",\r\n};\r\n\r\nexport const darkTheme = {\r\n  title: \"dark\",\r\n  bodyBackground: \"#363537\",\r\n  background: \"#363537\",\r\n  color: \"#cca353\",\r\n  text: \"#fff\",\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\nhtml {\r\n  font-size: 18px;\r\n}\r\n\r\n@media only screen and (max-width: 560px) {\r\n  html {\r\n    font-size: 15px;\r\n  }\r\n}\r\n\r\ninput:focus {\r\n  outline: none;\r\n}\r\n\r\n/* Reusable Component - Image Container */\r\n\r\n.image-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n  background: #000;\r\n}\r\n\r\n.image-container img {\r\n  width: 100%;\r\n}\r\n\r\n/* App Styles */\r\n\r\n.App {\r\n  font-family: \"Work Sans\", sans-serif;\r\n}\r\n\r\nbody {\r\n  background: ${({ theme }) => theme.bodyBackground}\r\n}\r\n\r\nheader {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0 20px;\r\n  background: ${({ theme }) => theme.background};\r\n}\r\n\r\nh1 {\r\n  padding: 0.66rem 0;\r\n  text-align: center;\r\n  background-color: ${({ theme }) => theme.background};\r\n  font-family: Poppins, sans-serif;\r\n  font-size: 1.8rem;\r\n  color: ${({ theme }) => theme.color}\r\n}\r\n\r\nh2, p, strong  {\r\n  color: ${({ theme }) => theme.text}\r\n\r\n}\r\n\r\nh3 {\r\n  color: ${({ theme }) => theme.color}\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: inherit;\r\n}\r\n`;\r\n","const apiKey = process.env.REACT_APP_YELP_KEY;\r\n\r\nconst Yelp = {\r\n  search(term, location, sortBy, price) {\r\n    return fetch(\r\n      `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}&price=${price}&locale=pt_BR`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${apiKey}`,\r\n        },\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data?.businesses) {\r\n          return data.businesses.map((business) => {\r\n            return {\r\n              id: business.id,\r\n              imageSrc: business.image_url,\r\n              url: business.url,\r\n              phone: business.phone,\r\n              name: business.name,\r\n              price: business.price,\r\n              address: business.location.address1,\r\n              city: business.location.city,\r\n              state: business.location.state,\r\n              zipCode: business.location.zip_code,\r\n              distance: business.distance,\r\n              category: business.categories.map((category) => category.title),\r\n              rating: business.rating,\r\n              reviewCount: business.review_count,\r\n            };\r\n          });\r\n        }\r\n      });\r\n  },\r\n\r\n  autocomplete(text, latitude, longitude) {\r\n    return fetch(\r\n      `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/autocomplete?text=${text}&latitude=${latitude}&longitude=${longitude}`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${apiKey}`,\r\n        },\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.table(data);\r\n        console.count();\r\n\r\n        return data.terms;\r\n      });\r\n  },\r\n};\r\n\r\nexport default Yelp;\r\n","import React from \"react\";\r\n\r\nimport \"./Business.css\";\r\n\r\nclass Business extends React.Component {\r\n  render() {\r\n    const gMaps = encodeURI(\r\n      this.props.business.address,\r\n      this.props.business.city,\r\n      this.props.business.state\r\n    );\r\n\r\n    return (\r\n      <div className=\"Business\">\r\n        <a\r\n          className=\"image-container\"\r\n          href={this.props.business.url}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <img\r\n            src={this.props.business.imageSrc}\r\n            alt={this.props.business.name}\r\n          />\r\n        </a>\r\n        <h2>{this.props.business.name}</h2>\r\n        <div className=\"Business-information\">\r\n          <div>\r\n            <a\r\n              href={`https://www.google.com/maps/search/?api=1&query=${gMaps}`}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <p>{this.props.business.address}</p>\r\n              <p>{this.props.business.city}</p>\r\n              <p>\r\n                {this.props.business.state} {this.props.business.zipCode}\r\n              </p>\r\n            </a>\r\n            <p>\r\n              <em>{(this.props.business.distance / 1000).toFixed(0)} km</em>\r\n            </p>\r\n            <a href={`tel:${this.props.business.phone}`}>\r\n              <strong>{this.props.business.phone}</strong>\r\n            </a>\r\n          </div>\r\n          <div className=\"Business-reviews\">\r\n            <h3>{this.props.business.category.join(\", \")}</h3>\r\n            <h3 className=\"rating\">{this.props.business.rating} stars</h3>\r\n            <strong>{this.props.business.price}</strong>\r\n            <p>{this.props.business.reviewCount} reviews</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Business;\r\n","import React from \"react\";\r\n\r\nimport \"./BusinessList.css\";\r\n\r\nimport Business from \"../Business/Business\";\r\n\r\nclass BusinessList extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"BusinessList\">\r\n        {this.props.businesses.map((business) => (\r\n          <Business key={business.id} business={business} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BusinessList;\r\n","import React from \"react\";\r\nimport PlacesAutocomplete from \"react-places-autocomplete\";\r\n\r\nimport \"./PlacesAutoComplete.css\";\r\n\r\nexport class LocationSearchInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { address: this.props.value };\r\n  }\r\n\r\n  handleChange = (address) => {\r\n    this.setState({ address: address }, () =>\r\n      this.props.handleLocationChange(this.state.address)\r\n    );\r\n  };\r\n\r\n  handleSelect = (address) => {\r\n    this.setState({ address: address }, () =>\r\n      this.props.handleLocationChange(this.state.address)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <PlacesAutocomplete\r\n        value={this.state.address}\r\n        onChange={this.handleChange}\r\n        onSelect={this.handleSelect}\r\n      >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n          <div>\r\n            <input\r\n              {...getInputProps({\r\n                placeholder: \"Search Places ...\",\r\n                className: \"location-search-input\",\r\n              })}\r\n            />\r\n            <div className=\"autocomplete-dropdown-container\">\r\n              {loading && <div className=\"loading-box\">Loading...</div>}\r\n              {suggestions.map((suggestion) => {\r\n                const className = suggestion.active\r\n                  ? \"suggestion-item--active\"\r\n                  : \"suggestion-item\";\r\n                // inline style for demonstration purpose\r\n                const style = suggestion.active\r\n                  ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\r\n                  : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\r\n                return (\r\n                  <div\r\n                    {...getSuggestionItemProps(suggestion, {\r\n                      className,\r\n                      style,\r\n                    })}\r\n                  >\r\n                    <span>{suggestion.description}</span>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </PlacesAutocomplete>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport Yelp from \"../../utils/Yelp\";\r\n\r\nimport \"./SearchBar.css\";\r\nimport Autocomplete from \"react-autocomplete\";\r\n\r\nimport { LocationSearchInput } from \"../PlacesAutoComplete/PlacesAutoComplete\";\r\nclass SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      term: \"\",\r\n      location: \"\",\r\n      sortBy: \"best_match\",\r\n      prices: [],\r\n      latitude: 0,\r\n      longitude: 0,\r\n      autocompleteList: [{ text: \"Pizza\" }, { text: \"Burger\" }],\r\n    };\r\n\r\n    this.handleTermChange = this.handleTermChange.bind(this);\r\n    this.handleLocationChange = this.handleLocationChange.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.handlePriceChange = this.handlePriceChange.bind(this);\r\n    this.autocompleteYelp = this.autocompleteYelp.bind(this);\r\n    this.generateAutocompleteList = this.generateAutocompleteList.bind(this);\r\n\r\n    this.priceOptions = {\r\n      $: \"1\",\r\n      $$: \"2\",\r\n      $$$: \"3\",\r\n      $$$$: \"4\",\r\n    };\r\n\r\n    this.sortByOptions = {\r\n      \"Best Match\": \"best_match\",\r\n      \"Highest Rated\": \"rating\",\r\n      \"Most Reviewed\": \"review_count\",\r\n    };\r\n\r\n    this.validator = new SimpleReactValidator({ autoForceUpdate: this });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition((pos) => {\r\n        this.setState({\r\n          latitude: pos.coords.latitude,\r\n          longitude: pos.coords.longitude,\r\n        });\r\n      });\r\n    }\r\n\r\n    this.generateAutocompleteList();\r\n  }\r\n\r\n  generateAutocompleteList() {\r\n    return this.state.autocompleteList;\r\n  }\r\n\r\n  autocompleteYelp(text, latitude, longitude) {\r\n    Yelp.autocomplete(text, latitude, longitude).then((data) => {\r\n      this.setState({ autocompleteList: data });\r\n    });\r\n  }\r\n\r\n  getSortByClass(sortByOption) {\r\n    return this.state.sortBy === sortByOption ? \"active\" : \"\";\r\n  }\r\n\r\n  handleSortByChange(sortByOption) {\r\n    this.setState(\r\n      {\r\n        sortBy: sortByOption,\r\n      },\r\n      () => {\r\n        this.handleSearch();\r\n      }\r\n    );\r\n  }\r\n\r\n  handleTermChange(e) {\r\n    this.setState(\r\n      {\r\n        term: e.target.value,\r\n      },\r\n      () => {\r\n        if (this.state.term.length > 0)\r\n          this.autocompleteYelp(\r\n            this.state.term,\r\n            this.state.latitude,\r\n            this.state.longitude\r\n          );\r\n      }\r\n    );\r\n  }\r\n\r\n  handleLocationChange(address) {\r\n    this.setState({\r\n      location: address,\r\n    });\r\n  }\r\n\r\n  handlePriceChange(event) {\r\n    const { checked, value } = event.target;\r\n\r\n    if (checked) {\r\n      return this.setState({ prices: [...this.state.prices, value] }, () =>\r\n        this.handleSearch()\r\n      );\r\n    } else {\r\n      const removedValues = this.state.prices.filter(\r\n        (price) => price !== value\r\n      );\r\n\r\n      return this.setState({ prices: removedValues }, () =>\r\n        this.handleSearch()\r\n      );\r\n    }\r\n  }\r\n\r\n  handleSearch(e) {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    if (this.validator.allValid()) {\r\n      this.props.searchYelp(\r\n        this.state.term,\r\n        this.state.location,\r\n        this.state.sortBy,\r\n        this.state.prices\r\n      );\r\n    } else {\r\n      this.validator.showMessages();\r\n    }\r\n  }\r\n\r\n  renderSortByOptions() {\r\n    return Object.keys(this.sortByOptions).map((sortByOption) => {\r\n      const sortByOptionValue = this.sortByOptions[sortByOption];\r\n\r\n      return (\r\n        <li\r\n          onClick={this.handleSortByChange.bind(this, sortByOptionValue)}\r\n          className={this.getSortByClass(sortByOptionValue)}\r\n          key={sortByOptionValue}\r\n        >\r\n          {sortByOption}\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderPriceOptions() {\r\n    return Object.keys(this.priceOptions).map((priceOption) => {\r\n      const priceOpionValue = this.priceOptions[priceOption];\r\n\r\n      return (\r\n        <li key={priceOpionValue}>\r\n          <input\r\n            type=\"checkbox\"\r\n            id={priceOpionValue}\r\n            value={priceOpionValue}\r\n            onChange={(event) => this.handlePriceChange(event)}\r\n          />\r\n          <label htmlFor={priceOpionValue}>{priceOption}</label>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"SearchBar\" onSubmit={this.handleSearch}>\r\n        <div className=\"SearchBar-sort-options\">\r\n          <ul>{this.renderSortByOptions()}</ul>\r\n          <ul>{this.renderPriceOptions()}</ul>\r\n        </div>\r\n        <div className=\"SearchBar-fields\">\r\n          <div className=\"form-group\">\r\n            <Autocomplete\r\n              getItemValue={(item) => item.text}\r\n              items={this.state.autocompleteList}\r\n              menuStyle={{\r\n                borderRadius: \"4px\",\r\n                boxShadow: \"0 2px 12px rgba(0, 0, 0, 0.1)\",\r\n                background: \"rgba(255, 255, 255, 0.9)\",\r\n                padding: \"2px 0\",\r\n                fontSize: \"90%\",\r\n                overflow: \"auto\",\r\n                maxHeight: \"50%\",\r\n                width: \"23rem\",\r\n                minWidth: \"unset\",\r\n              }}\r\n              renderItem={(item, isHighlighted) => (\r\n                <div\r\n                  style={{\r\n                    background: isHighlighted ? \"lightgray\" : \"white\",\r\n                    marginTop: \"5px\",\r\n                    padding: \"5px 10px\",\r\n                  }}\r\n                  key={item.text}\r\n                >\r\n                  {item.text}\r\n                </div>\r\n              )}\r\n              value={this.state.term}\r\n              onChange={(e) => this.handleTermChange(e)}\r\n              onSelect={(value) => this.setState({ term: value })}\r\n              inputProps={{ placeholder: \"Search for a Business*\" }}\r\n            />\r\n            {this.validator.message(\"term\", this.state.term, \"required\")}\r\n          </div>\r\n          {/* \r\n          <div className=\"form-group\">\r\n            <input\r\n              onChange={this.handleTermChange}\r\n              placeholder=\"Search Businesses*\"\r\n              value={this.state.term}\r\n            />\r\n          </div> */}\r\n          <div className=\"form-group\">\r\n            {/* <input\r\n              onChange={this.handleLocationChange}\r\n              placeholder=\"Where?*\"\r\n              value={this.state.location}\r\n              required\r\n            /> */}\r\n            <LocationSearchInput\r\n              handleLocationChange={this.handleLocationChange}\r\n              value={this.state.location}\r\n            />\r\n            {this.validator.message(\r\n              \"location\",\r\n              this.state.location,\r\n              \"required\"\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"SearchBar-submit\">\r\n          <button type=\"submit\"> Let's Go</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport Switch from \"react-switch\";\r\n\r\nclass Toggle extends React.Component {\r\n  render() {\r\n    return (\r\n      <Switch\r\n        onChange={this.props.toggleTheme}\r\n        checked={this.props.theme === \"dark\"}\r\n        checkedIcon={false}\r\n        uncheckedIcon={false}\r\n        height={10}\r\n        width={40}\r\n        handleDiameter={20}\r\n        offColor={\"#363537\"}\r\n        onColor={\"#cca353\"}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toggle;\r\n","import React, { useState } from \"react\";\n// import \"./App.css\";\n\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"../../themes/themes\";\nimport { GlobalStyles } from \"../../themes/global\";\nimport { useDarkMode } from \"../../utils/useDarkMode\";\n\nimport Yelp from \"../../utils/Yelp\";\nimport BusinessList from \"../BusinessList/BusinessList\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Toggle from \"../Toggle/Toggle\";\n\nfunction App() {\n  const [businesses, setBusinesses] = useState([]);\n  const [theme, toggleTheme] = useDarkMode();\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\n  // this.theme = new useDarkMode(\"light\");\n  // this.searchYelp = this.searchYelp.bind(this);\n  // this.toggleTheme = this.toggleTheme.bind(this);\n\n  // toggleTheme() {\n  //   if (this.state.theme === \"light\") {\n  //     this.setState({ theme: \"dark\" });\n  //   } else {\n  //     this.setState({ theme: \"light\" });\n  //   }\n  // }\n\n  const searchYelp = (term, location, sortBy, prices) => {\n    if (prices.length === 0) {\n      prices = [\"1\", \"2\", \"3\", \"4\"];\n    }\n\n    Yelp.search(term, location, sortBy, prices).then((businesses) =>\n      setBusinesses(businesses)\n    );\n  };\n\n  return (\n    <ThemeProvider theme={themeMode}>\n      <div className=\"App\">\n        <GlobalStyles />\n        <header>\n          <h1>ravenous</h1>\n          <Toggle theme={theme} toggleTheme={toggleTheme} />\n        </header>\n        <SearchBar searchYelp={searchYelp} />\n        <BusinessList businesses={businesses} />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useDarkMode = () => {\r\n  const [theme, setTheme] = useState(\"light\");\r\n\r\n  const setMode = (mode) => {\r\n    window.localStorage.setItem(\"theme\", mode);\r\n    setTheme(mode);\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    theme === \"light\" ? setMode(\"dark\") : setMode(\"light\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const localTheme = window.localStorage.getItem(\"theme\");\r\n    window.matchMedia &&\r\n    window.matchMedia(\"(prefers-color-scheme: dark)\").matches &&\r\n    !localTheme\r\n      ? setMode(\"dark\")\r\n      : localTheme\r\n      ? setTheme(localTheme)\r\n      : setMode(\"light\");\r\n  }, []);\r\n\r\n  return [theme, toggleTheme];\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}